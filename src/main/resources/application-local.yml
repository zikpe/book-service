server:
  port: 8082
spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/bookdb
    username: ${USERNAME}
    password: ${PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  kafka:
    bootstrap-servers: 192.168.1.5:29092
    consumer:
      group-id: book-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: '*'
      auto-offset-reset: earliest

eureka:
  client:
    register-with-eureka: false
    fetch-registry: false

# api gateway
gateway:
  filter:
    enabled: false

logging:
  level:
    org.springframework.web.client.RestTemplate: INFO
    org.springframework.web.servlet.DispatcherServlet: INFO
    com.netflix.discovery: WARN
    com.netflix.eureka: WARN
    org.springframework.cloud.netflix.eureka: WARN